Linux terminal. HW_1. The first part

Нужно уметь делать все пункты задания.
Куда и в каком виде отправлять задание - скажу позже.

1) Посмотреть где я
pwd
2) Создать папку
mkdir folder_1
3) Зайти в папку
cd folder_1
4) Создать 3 папки
mkdir folder_2 folder_3 folder_4
5) Зайти в любоую папку
cd folder_3
6) Создать 5 файлов (3 txt, 2 json)
touch 1.txt 2.txt 3.txt 1.json 2.json
7) Создать 3 папки
mkdir in_folder_1 in_folder_2 in_folder_3
8. Вывести список содержимого папки
ls -l
9) + Открыть любой txt файл
cat 3.txt
10) + написать туда что-нибудь, любой текст.
vi 3.txt
11) + сохранить и выйти.
:x
12) Выйти из папки на уровень выше
cd ../
—
13) переместить любые 2 файла, которые вы создали, в любую другую папку.
mv ./folder_3/1.json ./folder_4
mv ./folder_3/2.json ./folder_4
14) скопировать любые 2 файла, которые вы создали, в любую другую папку.
cp ./folder_3/1.txt ./folder_2
cp ./folder_3/2.txt ./folder_2
15) Найти файл по имени
find -name "*.json"
16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает.

17) вывести несколько первых строк из текстового файла
head 3.txt
18) вывести несколько последних строк из текстового файла
tail 3.txt
19) просмотреть содержимое длинного файла (команда less) изучите как она работает.
cat 3.txt | less
20) вывести дату и время
date

=====

Linux terminal. Termial. HW_2
1. Сделать папку dir_1
mkdir dir_1
2. Зайти в папку dir_1
cd dir_1
3. Создать папку inner_dir_1
mkdir inner_dir_1
4. Посмотреть где ты находишься
pwd
5. Находясь в папке dir_1 создать пустой текстовый файл tf_1.txt
touch tf_1.txt
6. Находясь в папке dir_1 через команду cat создать текстовый файл tf_2.txt со следующими строками:
- the first 1
- the second 2
- the third 3
cat > tf_2.txt
- the first 1
- the second 2
- the third 3
ctrl+D
7. Зайти в папку inner_dir_1
cd inner_dir_1
8. Через cat сделать текстовый файл tf_3.txt  c любыми строками
cat > tf_3.txt
new stroke
ctrl+D
9. Через cat добавить в текстовый файл tf_3.txt строку “the second 2”
cat > tf_3.txt
the second 2
ctrl+D
10. Через cat добавить в текстовый файл tf_3.txt строку “the sec 2”
cat >> tf_3.txt
the sec 2
ctrl+D
11. Через cat добавить в текстовый файл tf_2.txt строку “the sec 3”
cat >> tf_2.txt
the sec 3
ctrl+D
12. Через cat добавить в текстовый файл tf_3.txt строку “the SeCoNd 2”
cat >> ./inner_dir_1/tf_3.txt
the SeCoNd 2
ctrl+D
13. Через cat добавить в текстовый файл tf_2.txt строку “the seConD 2”
cat >> tf_2.txt
the seConD 2
ctrl+D
14. Сделать текстовый файл tf_4.txt в котором будет 15 строк.
cat > tf_4.txt
15. Сделать текстовый файл tF_5.txt в котором будет 13 строк.
cat > tf_5.txt
16. Вывести список всех файлов в папке.
ls -l
17. Выйти из папки inner_dir_1
cd ../
18. Вывести содержимое файла tf_3.txt в терминал.
cat tf_3.txt
19. Найти путь к файлу tf_4.txt
find -name "tf_4.txt"
20. Отчистить файл tf_4.txt от содержимого без удаления самого файла.
cat >> ./inner_dir_1/tf_4.txt
21. Найти путь к файлам у которых есть  “tf” в названии.
find -name "*tf*"
22. Найти путь к файлам у которых есть  “tf” в названии и буквы в любом регистре.
find -name "tf*"

23. Найти строки в файлах где есть комбинация букв “sec” в текущей папке
grep -w "sec" ./*
24. Найти строки в файлах где есть комбинация букв “sec” в любом регистре в текущей папке
grep -i "sec" ./*
25. Найти строки в файлах где есть только комбинация букв “sec” в текущей папке
grep -x "sec" ./*
26. Найти строки в файлах где есть только комбинация букв “sec” в любом регистре в текущей папке
grep -x sec ./*
27. Найти строки в файлах где есть комбинация букв “second” в текущей папке
grep -rw second ./*
28. Найти строки в файлах где есть комбинация букв “second” в любом регистре в текущей папке
grep -ri second ./*
29. Найти строки в файлах где есть комбинация букв “second” во всех папках ниже уровнем
grep -rw second ./
30. Найти только путь и название файла в строках которых есть комбинация букв “second” в текущей папке
grep -l "second" ./*
31. Найти все строки во всех файлах где нет комбинации “second”
grep -rvwi "second" ./*
32. Найти только название и путь к файлам где нет комбинации “second”
grep -rL '\<second\>' ./*

33. Вывести в терминал 4 последних строк любого текстового файла
tail -n 4 ./inner_dir_1/tf_5.txt
34. Вывести в терминал 4 первые строки любого текстового файла.
head -n 4 ./inner_dir_1/tf_5.txt
35. Команда в одну строку. Создать папку и создать текстовый файл с содержиммым.
mkdir inner_dir_2 | cat > ./inner_dir_2/tf_6.txt | echo "sometext" > ./inner_dir_2/tf_6.txt
36. Команда в одну строку. Переместить в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
find ./ -type f -exec grep -wlr "sec" {} \; | xargs -I % mv % ./inner_dir_2
37. Команда в одну строку. Скопировать в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
find ./ -type f -exec grep -wlr "sec" {} \; | xargs -I % cp % ./inner_dir_2
38. Команда в одну строку. Найти все строки c “sec” во всех текстовых файлах, скопировать и вставить эти строки в один новый созданный текстовый файл.
grep -irh "sec" > ./sec_strings.txt
39. Команда в одну строку. Удалить текстовые файлы у которых в содержимом есть слово “sec”
find ./ -type f -exec grep -wlr "sec" {} \; | xargs -I % rm %
40. Просто вывести в терминал строку “Good job!!”
echo 'Good job!!'


=====

HW_3. GIT Homework 1

4. Создать внешний репозиторий c названием JSON. 
UI https://github.com/zykat?tab=repositories
Repositories -> New-> "Repository name":"JSON" -> "Create repository"
5. Клонировать репозиторий JSON на локальный компьютер. 
Local: git clone https://github.com/zykat/JSON.git
6. Внутри локального JSON создать файл “new.json”
touch new.json
7. Добавить файл под гит
git add new.json
8. Закоммитить файл.
git commit -m "add empty file new.json"
9. Отправить файл на внешний GitHub репозиторий.
git push
10. Отредактировать содержание файла “new.json” - 
написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.
vi new.json
11. Отправить изменения на внешний репозиторий.
git push
12. Создать файл preferences.json
touch preferences.json
13. В файл preferences.json добавить информацию 
о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) 
в формате JSON.
vi preferences.json
14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vi sklls.json
15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git commit -m "add files: preferences.json, skills.json"
git push
16. На веб интерфейсе создать файл bug_report.json.
https://github.com/zykat/JSON - Add file - Create new file - bug_report.json - Commit new file
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click button "Commit changes"
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
edit bug_report.json
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click button "Commit changes"
20. Синхронизировать внешний и локальный репозиторий JSON
Local: git fetch
git pull

===

21. Создать внешний репозиторий c названием XML. 
UI https://github.com/zykat?tab=repositories
Repositories -> New-> "Repository name":"XML" -> "Create repository"
22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/zykat/XML.git
23. Внутри локального XML создать файл “new.xml”.
touch new.xml
24. Добавить файл под гит.
git add new.xml
25. Закоммитить файл.
git commit -m "add empty file new.xml"
26. Отправить файл на внешний GitHub репозиторий.
git push
27. Отредактировать содержание файла “new.xml” - 
написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "add lines to file"
git push
29. Создать файл preferences.xml
touch preferences.xml
30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vi preferences.xml
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
vi skills.xml
32. Сделать коммит в одну строку.
git add preferences.xml skills.xml
git commit -m "2 new files: preferences.xml,skills.xml"
33. Отправить сразу 2 файла на внешний репозиторий.
git push
34. На веб интерфейсе создать файл bug_report.xml.
https://github.com/zykat/XML - Add files  - Create new file - bug_report.xml
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click button "Commit changes"
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
edit bug_report.xml
37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click button "Commit changes"
38. Синхронизировать внешний и локальный репозиторий XML
Local: git fetch
git pull

===

TXT
1. Создать внешний репозиторий c названием TXT.
UI https://github.com/zykat?tab=repositories
Repositories -> New-> "Repository name":"TXT" -> "Create repository" 
2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/zykat/TXT.git
3. Внутри локального TXT создать файл “new.txt”.
touch new.txt
4. Добавить файл под гит.
git add new.txt
5. Закоммитить файл.
git commit -m "add empty file new.txt"
6. Отправить файл на внешний GitHub репозиторий.
git push
7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vi new.txt
8. Отправить изменения на внешний репозиторий.
git commit -am "add lines to file"
git push
9. Создать файл preferences.txt
touch preferences.txt
10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vi preferences.txt
11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch sklls.txt
12. Сделать коммит в одну строку.
git add preferences.txt sklls.txt
git commit -m "2 new files: preferences.txt sklls.txt"
13. Отправить сразу 2 файла на внешний репозиторий.
git push
14. На веб интерфейсе создать файл bug_report.txt.
https://github.com/zykat/TXT - Add files  - Create new file - bug_report.txt
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click button "Commit changes"
16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
edit bug_report.txt
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
click button "Commit changes"
18. Синхронизировать внешний и локальный репозиторий TXT
Local: git fetch
git pull
